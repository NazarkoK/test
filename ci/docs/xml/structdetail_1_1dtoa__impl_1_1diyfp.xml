<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structdetail_1_1dtoa__impl_1_1diyfp" kind="struct" language="C++" prot="public">
    <compoundname>detail::dtoa_impl::diyfp</compoundname>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdetail_1_1dtoa__impl_1_1diyfp_1a80cf8cc846a7bf96362d3b11886994e3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int detail::dtoa_impl::diyfp::kPrecision</definition>
        <argsstring></argsstring>
        <name>kPrecision</name>
        <qualifiedname>detail::dtoa_impl::diyfp::kPrecision</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16842" column="26" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16842" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdetail_1_1dtoa__impl_1_1diyfp_1ae1518119517cb69d79aa64ffb93c8375" prot="public" static="no" mutable="no">
        <type>std::uint64_t</type>
        <definition>std::uint64_t detail::dtoa_impl::diyfp::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>detail::dtoa_impl::diyfp::f</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16844" column="19" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdetail_1_1dtoa__impl_1_1diyfp_1ae2b59fab8dee9ef0192eb6b568fa7314" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int detail::dtoa_impl::diyfp::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <qualifiedname>detail::dtoa_impl::diyfp::e</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16845" column="9" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16845" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structdetail_1_1dtoa__impl_1_1diyfp_1a7c8377d2b931fcb3088d54c41b99c53b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>detail::dtoa_impl::diyfp::diyfp</definition>
        <argsstring>(std::uint64_t f_, int e_) noexcept</argsstring>
        <name>diyfp</name>
        <qualifiedname>detail::dtoa_impl::diyfp::diyfp</qualifiedname>
        <param>
          <type>std::uint64_t</type>
          <declname>f_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16847" column="15" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16847" bodyend="16847"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structdetail_1_1dtoa__impl_1_1diyfp_1a75142bace0b78b1e1433b1d35a7ff252" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref></type>
        <definition>static diyfp detail::dtoa_impl::diyfp::sub</definition>
        <argsstring>(const diyfp &amp;x, const diyfp &amp;y) noexcept</argsstring>
        <name>sub</name>
        <qualifiedname>detail::dtoa_impl::diyfp::sub</qualifiedname>
        <param>
          <type>const <ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>returns x - y </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>x.e == y.e and x.f &gt;= y.f </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16853" column="18" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16853" bodyend="16859"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1dtoa__impl_1_1diyfp_1a046c61f2c13411677eedfb5b9b7a8226" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref></type>
        <definition>static diyfp detail::dtoa_impl::diyfp::mul</definition>
        <argsstring>(const diyfp &amp;x, const diyfp &amp;y) noexcept</argsstring>
        <name>mul</name>
        <qualifiedname>detail::dtoa_impl::diyfp::mul</qualifiedname>
        <param>
          <type>const <ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>returns x * y </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The result is rounded. (Only the upper q bits are returned.) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16865" column="18" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16865" bodyend="16924"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1dtoa__impl_1_1diyfp_1a5bad735c2cb50b194938a8a89b82f6ed" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref></type>
        <definition>static diyfp detail::dtoa_impl::diyfp::normalize</definition>
        <argsstring>(diyfp x) noexcept</argsstring>
        <name>normalize</name>
        <qualifiedname>detail::dtoa_impl::diyfp::normalize</qualifiedname>
        <param>
          <type><ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>normalize x such that the significand is &gt;= 2^(q-1) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>x.f != 0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16930" column="18" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16930" bodyend="16941"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1dtoa__impl_1_1diyfp_1a5a9ce83c6c1663c9aaac7ffd9009b971" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref></type>
        <definition>static diyfp detail::dtoa_impl::diyfp::normalize_to</definition>
        <argsstring>(const diyfp &amp;x, const int target_exponent) noexcept</argsstring>
        <name>normalize_to</name>
        <qualifiedname>detail::dtoa_impl::diyfp::normalize_to</qualifiedname>
        <param>
          <type>const <ref refid="structdetail_1_1dtoa__impl_1_1diyfp" kindref="compound">diyfp</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>target_exponent</declname>
        </param>
        <briefdescription>
<para>normalize x such that the result has the exponent E </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>e &gt;= x.e and the upper e - x.e bits of x.f must be zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16947" column="18" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16947" bodyend="16955"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="16840" column="1" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="16841" bodyend="16956"/>
    <listofallmembers>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a7c8377d2b931fcb3088d54c41b99c53b" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>diyfp</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1ae2b59fab8dee9ef0192eb6b568fa7314" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>e</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1ae1518119517cb69d79aa64ffb93c8375" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>f</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a80cf8cc846a7bf96362d3b11886994e3" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>kPrecision</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a046c61f2c13411677eedfb5b9b7a8226" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>mul</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a5bad735c2cb50b194938a8a89b82f6ed" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>normalize</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a5a9ce83c6c1663c9aaac7ffd9009b971" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>normalize_to</name></member>
      <member refid="structdetail_1_1dtoa__impl_1_1diyfp_1a75142bace0b78b1e1433b1d35a7ff252" prot="public" virt="non-virtual"><scope>detail::dtoa_impl::diyfp</scope><name>sub</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
