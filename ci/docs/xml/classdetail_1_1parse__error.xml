<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classdetail_1_1parse__error" kind="class" language="C++" prot="public">
    <compoundname>detail::parse_error</compoundname>
    <basecompoundref refid="classdetail_1_1exception" prot="public" virt="non-virtual">detail::exception</basecompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdetail_1_1parse__error_1a5bce7d135aa3a38d1d3f4ed7bf8615e1" prot="public" static="no" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t detail::parse_error::byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <qualifiedname>detail::parse_error::byte</qualifiedname>
        <briefdescription>
<para>byte index of the parse error </para>
        </briefdescription>
        <detaileddescription>
<para>The byte index of the last read character in the input file.</para>
<para><simplesect kind="note"><para>For an input with n bytes, 1 is the index of the first character and n+1 is the index of the terminating null byte or the end of file. This also holds true when reading a byte vector (CBOR or MessagePack). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4436" column="23" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4436" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdetail_1_1parse__error_1a07046ea9f33d28f120af188ed674d6df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonContext</type>
          </param>
          <param>
            <type><ref refid="namespacedetail_1a469b9c0b78404c24509a221801bc4c26" kindref="member">enable_if_t</ref>&lt; <ref refid="structdetail_1_1is__basic__json__context" kindref="compound">is_basic_json_context</ref>&lt; BasicJsonContext &gt;<ref refid="namespacedetail_1a47b1bb0bbd3596589ed9187059c312efa2063c1608d6e0baf80249c42e2be5804" kindref="member">::value</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classdetail_1_1parse__error" kindref="compound">parse_error</ref></type>
        <definition>static parse_error detail::parse_error::create</definition>
        <argsstring>(int id_, const position_t &amp;pos, const std::string &amp;what_arg, BasicJsonContext context)</argsstring>
        <name>create</name>
        <qualifiedname>detail::parse_error::create</qualifiedname>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1position__t" kindref="compound">position_t</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>what_arg</declname>
        </param>
        <param>
          <type>BasicJsonContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>create a parse error exception </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id_</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the exception </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the error occurred (or with chars_read_total=0 if the position cannot be determined) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">what_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>the explanatory string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classdetail_1_1parse__error" kindref="compound">parse_error</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4411" column="24" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4411" bodyend="4416"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1parse__error_1a55b7ac869c65efd530fbf3dee18c5e9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonContext</type>
          </param>
          <param>
            <type><ref refid="namespacedetail_1a469b9c0b78404c24509a221801bc4c26" kindref="member">enable_if_t</ref>&lt; <ref refid="structdetail_1_1is__basic__json__context" kindref="compound">is_basic_json_context</ref>&lt; BasicJsonContext &gt;<ref refid="namespacedetail_1a47b1bb0bbd3596589ed9187059c312efa2063c1608d6e0baf80249c42e2be5804" kindref="member">::value</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classdetail_1_1parse__error" kindref="compound">parse_error</ref></type>
        <definition>static parse_error detail::parse_error::create</definition>
        <argsstring>(int id_, std::size_t byte_, const std::string &amp;what_arg, BasicJsonContext context)</argsstring>
        <name>create</name>
        <qualifiedname>detail::parse_error::create</qualifiedname>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>byte_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>what_arg</declname>
        </param>
        <param>
          <type>BasicJsonContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4419" column="24" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4419" bodyend="4425"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classdetail_1_1parse__error_1a7703a00cc97c4590e56254b62b479ff5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>detail::parse_error::parse_error</definition>
        <argsstring>(int id_, std::size_t byte_, const char *what_arg)</argsstring>
        <name>parse_error</name>
        <qualifiedname>detail::parse_error::parse_error</qualifiedname>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>byte_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4439" column="5" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4439" bodyend="4440"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdetail_1_1parse__error_1a19cdccb06cba79d7b4efc51f501ced8b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string detail::parse_error::position_string</definition>
        <argsstring>(const position_t &amp;pos)</argsstring>
        <name>position_string</name>
        <qualifiedname>detail::parse_error::position_string</qualifiedname>
        <param>
          <type>const <ref refid="structdetail_1_1position__t" kindref="compound">position_t</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4442" column="24" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4442" bodyend="4446"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>exception indicating a parse error </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/basic_json/parse_error/">https://json.nlohmann.me/api/basic_json/parse_error/</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>detail::exception</label>
        <link refid="classdetail_1_1exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>detail::parse_error</label>
        <link refid="classdetail_1_1parse__error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>detail::exception</label>
        <link refid="classdetail_1_1exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>detail::parse_error</label>
        <link refid="classdetail_1_1parse__error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" line="4398" column="1" bodyfile="D:/csad2425KI405KachurNazar11/src/client/packages/nlohmann.json.3.11.2/build/native/include/nlohmann/json.hpp" bodystart="4399" bodyend="4447"/>
    <listofallmembers>
      <member refid="classdetail_1_1parse__error_1a5bce7d135aa3a38d1d3f4ed7bf8615e1" prot="public" virt="non-virtual"><scope>detail::parse_error</scope><name>byte</name></member>
      <member refid="classdetail_1_1parse__error_1a07046ea9f33d28f120af188ed674d6df" prot="public" virt="non-virtual"><scope>detail::parse_error</scope><name>create</name></member>
      <member refid="classdetail_1_1parse__error_1a55b7ac869c65efd530fbf3dee18c5e9c" prot="public" virt="non-virtual"><scope>detail::parse_error</scope><name>create</name></member>
      <member refid="classdetail_1_1exception_1a6b4a786b5c1c25dd3edaceb1bf2d5120" prot="protected" virt="non-virtual"><scope>detail::parse_error</scope><name>diagnostics</name></member>
      <member refid="classdetail_1_1exception_1af3739c53fe56a1712754d13dfa561f80" prot="protected" virt="non-virtual"><scope>detail::parse_error</scope><name>diagnostics</name></member>
      <member refid="classdetail_1_1exception_1a528d6bc77e88490bbb84cde2222b7ff0" prot="protected" virt="non-virtual"><scope>detail::parse_error</scope><name>exception</name></member>
      <member refid="classdetail_1_1exception_1a63b819fbb2ef34df9dad1e309207fa24" prot="public" virt="non-virtual"><scope>detail::parse_error</scope><name>id</name></member>
      <member refid="classdetail_1_1exception_1a6f86cee7b7a4938d4d758036dc4deed9" prot="private" virt="non-virtual"><scope>detail::parse_error</scope><name>m</name></member>
      <member refid="classdetail_1_1exception_1a8f1eb56b9964c8dd84d89d0da98d883b" prot="protected" virt="non-virtual"><scope>detail::parse_error</scope><name>name</name></member>
      <member refid="classdetail_1_1parse__error_1a7703a00cc97c4590e56254b62b479ff5" prot="private" virt="non-virtual"><scope>detail::parse_error</scope><name>parse_error</name></member>
      <member refid="classdetail_1_1parse__error_1a19cdccb06cba79d7b4efc51f501ced8b" prot="private" virt="non-virtual"><scope>detail::parse_error</scope><name>position_string</name></member>
      <member refid="classdetail_1_1exception_1ae75d7315f5f2d85958da6d961375caf0" prot="public" virt="non-virtual"><scope>detail::parse_error</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
