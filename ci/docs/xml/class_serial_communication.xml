<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_serial_communication" kind="class" language="C++" prot="public">
    <compoundname>SerialCommunication</compoundname>
    <includes refid="_serial_port_8h" local="no">SerialPort.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_serial_communication_1aac189f411832b94c00591694528c93d1" prot="private" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE SerialCommunication::hSerial</definition>
        <argsstring></argsstring>
        <name>hSerial</name>
        <qualifiedname>SerialCommunication::hSerial</qualifiedname>
        <initializer>= INVALID_HANDLE_VALUE</initializer>
        <briefdescription>
<para>Handle for the serial port. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="31" column="12" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_serial_communication_1ae4a085f0c6162f1f6303a7a2197db2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SerialCommunication::connect</definition>
        <argsstring>(const std::string &amp;port, int baudRate)</argsstring>
        <name>connect</name>
        <qualifiedname>SerialCommunication::connect</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>baudRate</declname>
        </param>
        <briefdescription>
<para>Connects to a serial port with the specified settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the serial port to connect to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baudRate</parametername>
</parameternamelist>
<parameterdescription>
<para>The baud rate for the connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the connection is successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="40" column="10" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.cpp" bodystart="24" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_serial_communication_1a93063f0f7e6c5d9889624698cd23f1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SerialCommunication::sendMessage</definition>
        <argsstring>(const std::string &amp;message)</argsstring>
        <name>sendMessage</name>
        <qualifiedname>SerialCommunication::sendMessage</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sends a message to the serial port and reads the response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to send. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The response from the serial device. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="47" column="17" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.cpp" bodystart="70" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_serial_communication_1a7df8c2b0b7631375cac7cca3b69c1a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SerialCommunication::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <qualifiedname>SerialCommunication::disconnect</qualifiedname>
        <briefdescription>
<para>Disconnects from the serial port. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="52" column="10" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_serial_communication_1acad400a3b4799015279810204df2dc8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SerialCommunication::drawBoard</definition>
        <argsstring>(const std::string &amp;boardState)</argsstring>
        <name>drawBoard</name>
        <qualifiedname>SerialCommunication::drawBoard</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>boardState</declname>
        </param>
        <briefdescription>
<para>Draws a tic-tac-toe board based on the given board state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boardState</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of the board as a string (e.g., &quot;XO XO XO &quot;). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="58" column="10" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.cpp" bodystart="93" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Handles serial communication with a device. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" line="26" column="1" bodyfile="D:/csad2425KI405KachurNazar11/src/client/client/SerialPort.h" bodystart="26" bodyend="59"/>
    <listofallmembers>
      <member refid="class_serial_communication_1ae4a085f0c6162f1f6303a7a2197db2eb" prot="public" virt="non-virtual"><scope>SerialCommunication</scope><name>connect</name></member>
      <member refid="class_serial_communication_1a7df8c2b0b7631375cac7cca3b69c1a25" prot="public" virt="non-virtual"><scope>SerialCommunication</scope><name>disconnect</name></member>
      <member refid="class_serial_communication_1acad400a3b4799015279810204df2dc8c" prot="public" virt="non-virtual"><scope>SerialCommunication</scope><name>drawBoard</name></member>
      <member refid="class_serial_communication_1aac189f411832b94c00591694528c93d1" prot="private" virt="non-virtual"><scope>SerialCommunication</scope><name>hSerial</name></member>
      <member refid="class_serial_communication_1a93063f0f7e6c5d9889624698cd23f1c2" prot="public" virt="non-virtual"><scope>SerialCommunication</scope><name>sendMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
